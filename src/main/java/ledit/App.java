/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package main.java.ledit;

import java.io.IOException;

import main.java.command.AbstarctCommandFactory;
import main.java.command.IEditableFile;
import main.java.command.TextFactoryProducer;

public class App {
	
	static final String TEST_FILE = "D:\\my\\ledit\\test.txt";
	static final String HELP = "Usage:\r\n"
			+ "lineeditor c:\\temp\\myfile.txt\r\n"
			+ "(displays a >> prompt)\r\n"
			+ " \r\n"
			+ "Commands:\r\n"
			+ "list - list each line in n:xxx format, e.g.\r\n"
			+ "1: first line\r\n"
			+ "2: second line\r\n"
			+ "3: last line\r\n"
			+ "del n - delete line at n\r\n"
			+ "ins n - insert a line at n\r\n"
			+ "save - saves to disk\r\n"
			+ "quit - quits the editor and returns to the command line";

    public static void main(String[] args) {
    	IEditableFile someFile = null;
    	AbstarctCommandFactory cf = TextFactoryProducer.getFactory(false);
		try {
			someFile = getTextFile(args);
		} catch (Exception e1) {
			// TODO Auto-generated catch block
			System.out.println("CRITICAL ERROR Please secify correct file in UTF8 format");
		}
		if(someFile != null) {
			try {
				CommandProcessor cr = new CommandProcessor(cf);
				cr.processCommands(someFile);
			} catch (IOException e) {
				System.out.println("CRITICAL ERROR during command execution");
			}
		}
        
    }
    
    private static IEditableFile getTextFile(String[] args) throws IOException {
    	if(args.length > 0) {
    		IEditableFile someFile = new EditableTextFile(args[0]);
    		if(someFile.getFile().exists() && someFile.getFile().canRead()) {
    			return someFile;
    		}
    	}
    	
    	System.out.println("ERROR Please secify correct file, using test file for now");
    	//return null;
		return new EditableTextFile(TEST_FILE);
    }
}
